#include<iostream>
#include<stdio.h>
#include<cstdlib>
# define N 8

using namespace std;
void printsolutuion(int board[N][N])
{

    for(int i=0;i<N;i++)
    {

        for(int j=0;j<N;j++)
        {
            cout<<board[i][j]<<" ";
        }
            cout<<endl;

    }
}
    bool issafe(int board[N][N],int row,int col)
    {
        for(int i=0;i<col;i++)
        {
            if(board[row][i])
                return false;
        }
        for(int i=row,j=col;i>=0&&j>=0;i--,j--)
        {
            if(board[i][j])
                return false;
        }
        for(int i=row,j=col;j>=0&&i<N;i++,j--)
        {
            if(board[i][j])
                return false;
        }
        return true;
    }

    bool solveNQuntil(int board[N][N],int col)
    {
        if(col>=N)
            return true;
        for(int i=0;i<N;i++)
        {
            if(issafe(board,i,col))
            {
                board[i][col]=1;
                if(solveNQuntil(board,col+1)==true)
                    return true;
                board[i][col]=0;
            }
        }
        return false;
    }

    bool solveNQ()
    {
        int board[N][N]={0};

        if(solveNQuntil(board,0)==false)
        {

            cout<<"solution does not exist ";
            return false;
        }
        printsolutuion(board);
        return true;
    }

    int main()
    {

        solveNQ();
        return 0;
    }
